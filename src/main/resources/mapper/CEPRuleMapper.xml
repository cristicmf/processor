<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webank.weevent.processor.mapper.CEPRuleMapper">
  <resultMap id="BaseResultMap" type="com.webank.weevent.processor.model.CEPRule">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rule_trigger_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rule_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="from_destination" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="condition_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="broker_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="to_destination" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="databaseUrl" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="error_destination" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="error_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="error_message" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ex_param" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rule_trigger_id, rule_name, from_destination, type, status, condition_type, broker_url, 
    to_destination, databaseUrl, create_time, error_destination, error_code, error_message, 
    ex_param
  </sql>
  <select id="selectByExample" parameterType="com.webank.weevent.processor.model.CEPRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cep_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cep_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cep_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.webank.weevent.processor.model.CEPRuleExample">
    delete from cep_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.webank.weevent.processor.model.CEPRule">
    insert into cep_rule (id, rule_trigger_id, rule_name, 
      from_destination, type, status, 
      condition_type, broker_url, to_destination, 
      databaseUrl, create_time, error_destination, 
      error_code, error_message, ex_param
      )
    values (#{id,jdbcType=INTEGER}, #{ruleTriggerId,jdbcType=INTEGER}, #{ruleName,jdbcType=VARCHAR}, 
      #{fromDestination,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{conditionType,jdbcType=INTEGER}, #{brokerUrl,jdbcType=VARCHAR}, #{toDestination,jdbcType=VARCHAR}, 
      #{databaseurl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{errorDestination,jdbcType=VARCHAR}, 
      #{errorCode,jdbcType=VARCHAR}, #{errorMessage,jdbcType=VARCHAR}, #{exParam,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.webank.weevent.processor.model.CEPRule">
    insert into cep_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleTriggerId != null">
        rule_trigger_id,
      </if>
      <if test="ruleName != null">
        rule_name,
      </if>
      <if test="fromDestination != null">
        from_destination,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="conditionType != null">
        condition_type,
      </if>
      <if test="brokerUrl != null">
        broker_url,
      </if>
      <if test="toDestination != null">
        to_destination,
      </if>
      <if test="databaseurl != null">
        databaseUrl,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="errorDestination != null">
        error_destination,
      </if>
      <if test="errorCode != null">
        error_code,
      </if>
      <if test="errorMessage != null">
        error_message,
      </if>
      <if test="exParam != null">
        ex_param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ruleTriggerId != null">
        #{ruleTriggerId,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null">
        #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="fromDestination != null">
        #{fromDestination,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="conditionType != null">
        #{conditionType,jdbcType=INTEGER},
      </if>
      <if test="brokerUrl != null">
        #{brokerUrl,jdbcType=VARCHAR},
      </if>
      <if test="toDestination != null">
        #{toDestination,jdbcType=VARCHAR},
      </if>
      <if test="databaseurl != null">
        #{databaseurl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorDestination != null">
        #{errorDestination,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMessage != null">
        #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="exParam != null">
        #{exParam,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.webank.weevent.processor.model.CEPRuleExample" resultType="java.lang.Long">
    select count(*) from cep_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cep_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ruleTriggerId != null">
        rule_trigger_id = #{record.ruleTriggerId,jdbcType=INTEGER},
      </if>
      <if test="record.ruleName != null">
        rule_name = #{record.ruleName,jdbcType=VARCHAR},
      </if>
      <if test="record.fromDestination != null">
        from_destination = #{record.fromDestination,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.conditionType != null">
        condition_type = #{record.conditionType,jdbcType=INTEGER},
      </if>
      <if test="record.brokerUrl != null">
        broker_url = #{record.brokerUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.toDestination != null">
        to_destination = #{record.toDestination,jdbcType=VARCHAR},
      </if>
      <if test="record.databaseurl != null">
        databaseUrl = #{record.databaseurl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.errorDestination != null">
        error_destination = #{record.errorDestination,jdbcType=VARCHAR},
      </if>
      <if test="record.errorCode != null">
        error_code = #{record.errorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.errorMessage != null">
        error_message = #{record.errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.exParam != null">
        ex_param = #{record.exParam,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cep_rule
    set id = #{record.id,jdbcType=INTEGER},
      rule_trigger_id = #{record.ruleTriggerId,jdbcType=INTEGER},
      rule_name = #{record.ruleName,jdbcType=VARCHAR},
      from_destination = #{record.fromDestination,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      condition_type = #{record.conditionType,jdbcType=INTEGER},
      broker_url = #{record.brokerUrl,jdbcType=VARCHAR},
      to_destination = #{record.toDestination,jdbcType=VARCHAR},
      databaseUrl = #{record.databaseurl,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      error_destination = #{record.errorDestination,jdbcType=VARCHAR},
      error_code = #{record.errorCode,jdbcType=VARCHAR},
      error_message = #{record.errorMessage,jdbcType=VARCHAR},
      ex_param = #{record.exParam,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.webank.weevent.processor.model.CEPRule">
    update cep_rule
    <set>
      <if test="ruleTriggerId != null">
        rule_trigger_id = #{ruleTriggerId,jdbcType=INTEGER},
      </if>
      <if test="ruleName != null">
        rule_name = #{ruleName,jdbcType=VARCHAR},
      </if>
      <if test="fromDestination != null">
        from_destination = #{fromDestination,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="conditionType != null">
        condition_type = #{conditionType,jdbcType=INTEGER},
      </if>
      <if test="brokerUrl != null">
        broker_url = #{brokerUrl,jdbcType=VARCHAR},
      </if>
      <if test="toDestination != null">
        to_destination = #{toDestination,jdbcType=VARCHAR},
      </if>
      <if test="databaseurl != null">
        databaseUrl = #{databaseurl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorDestination != null">
        error_destination = #{errorDestination,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        error_code = #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMessage != null">
        error_message = #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="exParam != null">
        ex_param = #{exParam,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.webank.weevent.processor.model.CEPRule">
    update cep_rule
    set rule_trigger_id = #{ruleTriggerId,jdbcType=INTEGER},
      rule_name = #{ruleName,jdbcType=VARCHAR},
      from_destination = #{fromDestination,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      condition_type = #{conditionType,jdbcType=INTEGER},
      broker_url = #{brokerUrl,jdbcType=VARCHAR},
      to_destination = #{toDestination,jdbcType=VARCHAR},
      databaseUrl = #{databaseurl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      error_destination = #{errorDestination,jdbcType=VARCHAR},
      error_code = #{errorCode,jdbcType=VARCHAR},
      error_message = #{errorMessage,jdbcType=VARCHAR},
      ex_param = #{exParam,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>